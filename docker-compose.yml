version: '3.8'

services:
  # TiDB Database with correct flags
  tidb:
    image: pingcap/tidb:latest
    container_name: tidb
    ports:
      - "4000:4000"
      - "10080:10080"
    volumes:
      - ./init-db:/docker-entrypoint-initdb.d
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes
    command: 
      - --store=mocktikv
      - --path=/tmp/tidb
      - -L=info
    healthcheck:
      test: ["CMD-SHELL", "mysql -h localhost -P 4000 -u root -e 'SELECT 1' || exit 1"]
      timeout: 20s
      retries: 10
      interval: 30s

  # Zookeeper for Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  # Kafka Message Broker with proper configuration for newer versions
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      # Fix for the KAFKA_PROCESS_ROLES error - use Zookeeper mode
      KAFKA_PROCESS_ROLES: ""
      KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: ""
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list"]
      timeout: 20s
      retries: 10
      interval: 30s

  # Backend API Service
  api:
    build: 
      context: ./api
      dockerfile: Dockerfile
    container_name: todo-api
    ports:
      - "3001:3001"
    depends_on:
      tidb:
        condition: service_healthy
      kafka:
        condition: service_healthy
    environment:
      - NODE_ENV=production
      - DB_HOST=tidb
      - DB_PORT=4000
      - DB_USER=root
      - DB_PASSWORD=
      - DB_NAME=testdb
      - KAFKA_BROKER=kafka:9092
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
    volumes:
      - ./api:/app
      - /app/node_modules

  # Frontend Client Service
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: todo-client
    ports:
      - "3000:3000"
    depends_on:
      - api
    environment:
      - REACT_APP_API_URL=http://localhost:3001
    volumes:
      - ./client:/app
      - /app/node_modules

  # Kafka Consumer for Todo Processing
  consumer:
    build:
      context: ./consumer
      dockerfile: Dockerfile
    container_name: todo-consumer
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      - KAFKA_BROKER=kafka:9092
      - DB_HOST=tidb
      - DB_PORT=4000
      - DB_USER=root
      - DB_PASSWORD=
      - DB_NAME=testdb
    volumes:
      - ./consumer:/app
      - /app/node_modules

volumes:
  tidb_data:
